require(abc)
##vector with the observed sumstats (FST_F:M, FST_HG:M, FST_HG:M)
stat.obs<-c(0.06,0.07,0.17)
##open BayeSSC stat files
panmixia<-read.csv("panmixia_stat_mod.csv",header=T)
split<-read.csv("split_stat_mod.csv",header=T)
##vector of model indices
models<-c(rep("panmixia",100000),rep("split",100000))
##stat.sim: matrix with simulated sumstats
stat.sim<-matrix(ncol=3,nrow=200000)
stat.sim[,1]<-c(panmixia[,1],split[,1]) #fst.FvM"
stat.sim[,2]<-c(panmixia[,2],split[,2]) #fst.HGvM
stat.sim[,3]<-c(panmixia[,3],split[,3]) #fst.HGvF
colnames(stat.sim) <-  c("fst.FvM","fst.HGvM","fst.HGvF") # names for the sumstats
par(mfcol = c(1,3))
boxplot(stat.sim[,1]~models,main=expression(paste("Farmers - Moderns (",italic(F[ST]),")")),ylim=c(0,0.4))
boxplot(stat.sim[,2]~models, main=expression(paste("HG - Moderns (",italic(F[ST]),")")),ylim=c(0,0.4))
boxplot(stat.sim[,3]~models, main=expression(paste("HG - Farmers (",italic(F[ST]),")")),ylim=c(0,0.4))
################################################
## model selection with ABC (postpr function) ##
################################################
# "mnlogistic": the posterior model probabilities are estimated using a multinomial logistic regression 
# "neuralnet":  uses neural networks. Useful if one wishes to use many statistics
mchoice_log<-postpr(stat.obs,models,stat.sim,tol=.1, method="mnlogistic")
summary(mchoice_log)
mchoice_nn<-postpr(stat.obs,models,stat.sim,tol=.1, method="neuralnet")
summary(mchoice_nn)
local({pkg <- select.list(sort(.packages(all.available = TRUE)))
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
chooseCRANmirror()
utils:::menuInstallPkgs()
chooseCRANmirror()
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(abc)
utils:::menuInstallPkgs()
par(mfcol = c(1,3))
boxplot(stat.sim[,1]~models,main=expression(paste("Farmers - Moderns (",italic(F[ST]),")")),ylim=c(0,0.4))
boxplot(stat.sim[,2]~models, main=expression(paste("HG - Moderns (",italic(F[ST]),")")),ylim=c(0,0.4))
boxplot(stat.sim[,3]~models, main=expression(paste("HG - Farmers (",italic(F[ST]),")")),ylim=c(0,0.4))
################################################
## model selection with ABC (postpr function) ##
################################################
# "mnlogistic": the posterior model probabilities are estimated using a multinomial logistic regression 
# "neuralnet":  uses neural networks. Useful if one wishes to use many statistics
mchoice_log<-postpr(stat.obs,models,stat.sim,tol=.1, method="mnlogistic")
summary(mchoice_log)
mchoice_nn<-postpr(stat.obs,models,stat.sim,tol=.1, method="neuralnet")
summary(mchoice_nn)
abc?
?abc
q()
